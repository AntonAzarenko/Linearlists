package by.azarenka;

public interface MyDequeue<E> {

    boolean add(E e);

    void addFirst(E obj);
    // добавляет элемент в начало очереди

    void addLast(E obj);
    //добавляет элемент obj в конец очереди

    E getFirst();
    //возвращает без удаления элемент из головы очереди. Если очередь пуста, генерирует исключение NoSuchElementException

    E getLast();
    //возвращает без удаления последний элемент очереди. Если очередь пуста, генерирует исключение NoSuchElementException

    boolean offerFirst(E obj);
    //добавляет элемент obj в самое начало очереди. Если элемент удачно добавлен, возвращает true, иначе - false

    boolean offerLast(E obj);
    //добавляет элемент obj в конец очереди. Если элемент удачно добавлен, возвращает true, иначе - false

    E peekFirst();
    //возвращает без удаления элемент из начала очереди. Если очередь пуста, возвращает значение null

    E peekLast();
    // возвращает без удаления последний элемент очереди. Если очередь пуста, возвращает значение null

    E pollFirst();
    //возвращает с удалением элемент из начала очереди. Если очередь пуста, возвращает значение null

    E pollLast();
    //возвращает с удалением последний элемент очереди. Если очередь пуста, возвращает значение null

    E pop();
    // возвращает с удалением элемент из начала очереди. Если очередь пуста, генерирует исключение NoSuchElementException

    void push(E element);
    //добавляет элемент в самое начало очереди

    E removeFirst();
    //возвращает с удалением элемент из начала очереди. Если очередь пуста, генерирует исключение NoSuchElementException

    E removeLast();
    //возвращает с удалением элемент из конца очереди. Если очередь пуста, генерирует исключение NoSuchElementException

    int size();

    boolean isEmpty();

}
